# .github/workflows/terraform-plan.yml

name: "Terraform Plan"

# Gatilho: Apenas em Pull Requests para a branch main

on:

  pull_request:

    branches:

      - main

# Permiss√µes: Leitura de conte√∫do √© suficiente para plan

permissions:

  contents: read

  pull-requests: read # Necess√°rio para actions que comentam no PR

# Evita execu√ß√µes concorrentes do mesmo workflow para o mesmo PR

concurrency:

  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

  cancel-in-progress: true

jobs:

  plan:

    name: "Terraform Plan"

    runs-on: ubuntu-latest

    steps:

      - name: "Checkout Code"

        uses: actions/checkout@v4

      # Configura as credenciais AWS usando os secrets

      - name: "Configure AWS Credentials"

        uses: aws-actions/configure-aws-credentials@v4

        with:

          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}

          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          aws-region: us-east-1 # Use a mesma regi√£o das suas vari√°veis Terraform

      - name: "Setup Terraform"

        uses: hashicorp/setup-terraform@v3

        with:

          terraform_version: "1.8.4"

      # Roda init - agora precisamos do backend padr√£o (local)

      - name: "Terraform Init"

        id: init

        run: terraform init

        working-directory: ./terraform/

      # Roda plan - -no-color para output limpo nos logs

      - name: "Terraform Plan"

        id: plan

        run: terraform plan -no-color && terraform plan -detailed-exitcode

        working-directory: ./terraform/

      # (Opcional Avan√ßado - Adiciona coment√°rio no PR com o output do plan)

      # Este step usa uma action da comunidade para postar o resultado do plan

      # como um coment√°rio no Pull Request, facilitando a revis√£o.

      # - name: Add Plan Output to PR

      #   uses: actions/github-script@v7

      #   if: github.event_name == 'pull_request'

      #   env:

      #     PLAN: "${{ steps.plan.outputs.stdout }}"

      #   with:

      #     github-token: ${{ secrets.GITHUB_TOKEN }}

      #     script: |

      #       const output = `#### Terraform Plan üìñ\n\n<details><summary>Show Plan</summary>

      #       \n\`\`\`terraform

      #       ${process.env.PLAN}

      #       \`\`\`

      #       </details>

      #       \n\*Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*

      #       `;

      #       github.rest.issues.createComment({

      #         issue_number: context.issue.number,

      #         owner: context.repo.owner,

      #         repo: context.repo.repo,

      #         body: output

      #       })
